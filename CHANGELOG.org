#+title: Change log for Emacs-enhanced
#+author: James Dyer
#+email: captainflasmr@gmail.com
#+language: en
#+options: ':t toc:nil author:nil email:nil num:nil title:nil
#+todo: TODO DOING | DONE
#+startup: showall

This document contains the release notes for Emacs-enhanced

* Versions

** <2025-01-08>

- Added open-with replacement using dired.
- Replacing =dired-async-mode= with =my/rsync= function to enable asynchronous copy directly from dired.
- Bind `C` in `dired-mode-map` to invoke the new rsync functionality.

** <2025-01-07>

Add eglot replacement using custom etags functions and keybindings

- Added `my/etags-load`: Locate and load the nearest TAGS file.
- Added `my/etags-update`: Generate etags using an external script if available.
- Added `my/generate-etags`: Recursively create etags for C, C++, C#, and Ada files.
- Introduced `predicate-exclusion-p` for directory exclusion logic.
- Bound `my/etags-load` to `C-x p l` and `my/etags-update` to `C-x p u`.

** <2025-01-05>

icomplete-in-buffer setup and completion functions to try and replace corfu/company

- Added `(setq icomplete-in-buffer t)` to improve in-buffer completion behavior.
- Documented custom functions =my/simple-completion-at-point= utilizing =completion-in-region= and =completing-read=
- Introduced `C-c TAB` keybinding for invoking custom completion.
- Disabled `completion-auto-help` globally except in minibuffer.
- Customized `TAB` key binding for minibuffer-local-completion-map.
- Suppressed completion buffer help header via `completion-show-help`.
- Updated documentation to reflect these adjustments and their rationale.

** <2025-01-01>

Refactor popup handling and improve buffer filtering logic

- Updated =my/popper-show-hide-popup= to improve popup buffer filtering with =popup-patterns=,
  allowing more flexible matching of buffers against patterns.
- Adjusted logic to remove redundant comments and optimize control flow:
  - Clearly separated cases for hiding the current popup and displaying the next valid popup.
  - Refactored buffer filtering using =seq-filter= to enhance clarity and reduce redundancy.
- Removed extraneous comments and dead code for improved readability.
- No functional changes to existing behavior; this is a refactoring for code clarity and maintainability.

** <2024-12-29>

Added initial attempt at generating an RSS xml feed based on my org posts.

** <2024-12-29>

Add "Issues" section and link TODOs to project features in README

- Added a new "Issues" section with TODOs, each linked to related project features.
- Supplemented the section with Emacs Lisp code to auto-generate issue tables.

** <2024-12-28>

- Added consult section for potential consult replacements.

** <2024-12-22>

- Added =my/kanban-to-table= implementation detailing its structure and purpose.
  - =my/kanban-to-table= dynamically formats Org-mode TODO headings into a Kanban-style Org table based on their TODO states.
  - The function supports filtering entries by tags or property matches.
  - Replaced the external package =org-kanban=

** <2024-12-20>

- Added defuns for pandoc md to org conversion, I guess I could check for =pandoc= being present on the system?
  
** <2024-12-20>

Update roadmap, mark features as DONE, and enhance configurations:

- *Features Marked as DONE:*
  - *image-dired*: Marked as DONE after functionality was revisited and copied over.
  - *selected-window-accent-mode*: Improved and marked as complete with updated configurations for synchronized highlighting of active windows and tabs.
  - *jinx/powerthesaurus*: Replaced with a simpler configuration relying on `flyspell-buffer` and dictionary lookups.
  - *deadgrep*: Transitioned to a lighter approach leveraging `grep-mode` and `ripgrep` while maintaining powerful search output.
  - *kurecolor*: Achieved similar results with custom regular expressions and built-in Emacs color utilities.

** <2024-12-19>

- *Replaced Features:*
  - *Minibuffer Completion*: Replaced `vertico`, `marginalia`, and other third-party tools with `fido-mode` and a workaround for exiting forced completion.
  - *Magit*: Transitioned to built-in VC for Git workflows; includes instructions for addressing SSH-related issues during pushes.

- *New Implementations:*
  - *Popper Replacement*: Introduced custom Elisp functions for toggling and managing popup buffers, mimicking `popper` functionality.
  - *Find-Name-Dired Alternative*: Enhanced file search functionality with fallback to `find`, `fd`, or `ripgrep` where available, maintaining compatibility with built-in `dired`.
  - *Color Manipulation*: Added Elisp functions for adjusting color brightness, saturation, and hue, providing a lightweight alternative to `kurecolor`.
    
- Tidied up kanban focussing more on the features that I am replacing with elisp rather than just replacing with built-ins

** <2024-12-18>

Added abbrev to replace tempel

** <2024-12-17>

fix(README): add workaround for missing ssh-askpass in Emacs with vc-dir mode

- Documented steps to resolve the issue where pushing to GitHub from Emacs using vc-dir mode fails due to missing ssh-askpass.
- Added instructions for installing `openssh-askpass` and creating a symbolic link to `/usr/lib/ssh/ssh-askpass`.
- Mentioned the potential QFSFileEngine error during `git push` with workaround applied.

This commit adds clarity for users encountering the `Permission denied (publickey)` issue and provides a temporary fix until a better solution is implemented.


